(function() {var implementors = {
"alloc":[["impl&lt;T: <a class=\"trait\" href=\"core/cmp/trait.Ord.html\" title=\"trait core::cmp::Ord\">Ord</a> + <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>, A: <a class=\"trait\" href=\"alloc/alloc/trait.Allocator.html\" title=\"trait alloc::alloc::Allocator\">Allocator</a> + <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>&gt; <a class=\"trait\" href=\"core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"struct\" href=\"alloc/collections/btree/set/struct.BTreeSet.html\" title=\"struct alloc::collections::btree::set::BTreeSet\">BTreeSet</a>&lt;T, A&gt;&gt; for &amp;<a class=\"struct\" href=\"alloc/collections/btree/set/struct.BTreeSet.html\" title=\"struct alloc::collections::btree::set::BTreeSet\">BTreeSet</a>&lt;T, A&gt;"]],
"core":[],
"hashbrown":[["impl&lt;T, S&gt; <a class=\"trait\" href=\"core/ops/arith/trait.Sub.html\" title=\"trait core::ops::arith::Sub\">Sub</a>&lt;&amp;<a class=\"struct\" href=\"hashbrown/set/struct.HashSet.html\" title=\"struct hashbrown::set::HashSet\">HashSet</a>&lt;T, S, <a class=\"struct\" href=\"hashbrown/raw/struct.Global.html\" title=\"struct hashbrown::raw::Global\">Global</a>&gt;&gt; for &amp;<a class=\"struct\" href=\"hashbrown/set/struct.HashSet.html\" title=\"struct hashbrown::set::HashSet\">HashSet</a>&lt;T, S&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,\n    S: <a class=\"trait\" href=\"core/hash/trait.BuildHasher.html\" title=\"trait core::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"core/default/trait.Default.html\" title=\"trait core::default::Default\">Default</a>,</span>"]],
"rustc_std_workspace_core":[],
"rustc_std_workspace_std":[],
"std":[["impl <a class=\"trait\" href=\"std/ops/trait.Sub.html\" title=\"trait std::ops::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"std/time/struct.Duration.html\" title=\"struct std::time::Duration\">Duration</a>&gt; for <a class=\"struct\" href=\"std/time/struct.SystemTime.html\" title=\"struct std::time::SystemTime\">SystemTime</a>"],["impl <a class=\"trait\" href=\"std/ops/trait.Sub.html\" title=\"trait std::ops::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"std/time/struct.Instant.html\" title=\"struct std::time::Instant\">Instant</a>&gt; for <a class=\"struct\" href=\"std/time/struct.Instant.html\" title=\"struct std::time::Instant\">Instant</a>"],["impl <a class=\"trait\" href=\"std/ops/trait.Sub.html\" title=\"trait std::ops::Sub\">Sub</a>&lt;<a class=\"struct\" href=\"std/time/struct.Duration.html\" title=\"struct std::time::Duration\">Duration</a>&gt; for <a class=\"struct\" href=\"std/time/struct.Instant.html\" title=\"struct std::time::Instant\">Instant</a>"],["impl&lt;T, S&gt; <a class=\"trait\" href=\"std/ops/trait.Sub.html\" title=\"trait std::ops::Sub\">Sub</a>&lt;&amp;<a class=\"struct\" href=\"std/collections/hash/set/struct.HashSet.html\" title=\"struct std::collections::hash::set::HashSet\">HashSet</a>&lt;T, S&gt;&gt; for &amp;<a class=\"struct\" href=\"std/collections/hash/set/struct.HashSet.html\" title=\"struct std::collections::hash::set::HashSet\">HashSet</a>&lt;T, S&gt;<span class=\"where fmt-newline\">where\n    T: <a class=\"trait\" href=\"std/cmp/trait.Eq.html\" title=\"trait std::cmp::Eq\">Eq</a> + <a class=\"trait\" href=\"std/hash/trait.Hash.html\" title=\"trait std::hash::Hash\">Hash</a> + <a class=\"trait\" href=\"std/clone/trait.Clone.html\" title=\"trait std::clone::Clone\">Clone</a>,\n    S: <a class=\"trait\" href=\"std/hash/trait.BuildHasher.html\" title=\"trait std::hash::BuildHasher\">BuildHasher</a> + <a class=\"trait\" href=\"std/default/trait.Default.html\" title=\"trait std::default::Default\">Default</a>,</span>"]]
};if (window.register_implementors) {window.register_implementors(implementors);} else {window.pending_implementors = implementors;}})()